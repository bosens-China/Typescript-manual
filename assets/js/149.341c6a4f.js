(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{827:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"改进类型推断和promise-all"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#改进类型推断和promise-all"}},[t._v("#")]),t._v(" 改进类型推断和 "),s("code",[t._v("Promise.all")])]),t._v(" "),s("p",[t._v("TypeScript 的最近几个版本（3.7 前后）更新了像 "),s("code",[t._v("Promise.all")]),t._v("  和 "),s("code",[t._v("Promise.race")]),t._v("  等的函数声明。\n不巧的是，它引入了一些回归问题，尤其是在和 "),s("code",[t._v("null")]),t._v("  或 "),s("code",[t._v("undefined")]),t._v("  混合使用的场景中。")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lion")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Seal")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("singKissFromARose")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("visitZoo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  lionExhibit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Lion"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  sealExhibit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Seal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("lion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" seal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("lionExhibit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sealExhibit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  lion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   ~~~~")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  对象可能为'undefined'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这是一种奇怪的行为！\n事实上，只有 "),s("code",[t._v("sealExhibit")]),t._v("  包含了 "),s("code",[t._v("undefined")]),t._v("  值，但是它却让 "),s("code",[t._v("lion")]),t._v("  也含有了 "),s("code",[t._v("undefined")]),t._v("  值。")]),t._v(" "),s("p",[t._v("得益于"),s("a",{attrs:{href:"https://github.com/jablko",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Jack Bates"),s("OutboundLink")],1),t._v(" 提交的"),s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/34501",target:"_blank",rel:"noopener noreferrer"}},[t._v(" PR"),s("OutboundLink")],1),t._v("，这个问题已经被修复了，它改进了 TypeScript 3.9 中的类型推断流程。\n上面的例子中已经不再产生错误。\n如果你在旧版本的 TypeScript 中被 "),s("code",[t._v("Promise")]),t._v("  的这个问题所困扰，我们建议你尝试一下 3.9 版本！")]),t._v(" "),s("h3",{attrs:{id:"awaited-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awaited-类型"}},[t._v("#")]),t._v(" "),s("code",[t._v("awaited")]),t._v("  类型")]),t._v(" "),s("p",[t._v("如果你一直关注 TypeScript，那么你可能会注意到"),s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/35998",target:"_blank",rel:"noopener noreferrer"}},[t._v("一个新的类型运算符 "),s("code",[t._v("awaited")]),t._v(" "),s("OutboundLink")],1),t._v("。\n这个类型运算符的作用是准确地表达 JavaScript 中 "),s("code",[t._v("Promise")]),t._v("  的工作方式。")]),t._v(" "),s("p",[t._v("我们原计划在 TypeScript 3.9 中支持 "),s("code",[t._v("awaited")]),t._v(" ，但在现有的代码中测试过该特性后，我们发现还需要进行一些设计，以便让所有人能够顺利地使用它。\n因此，我们从主分支中暂时移除了这个特性。\n我们将继续试验这个特性，它不会被包含进本次发布。")]),t._v(" "),s("h2",{attrs:{id:"速度优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#速度优化"}},[t._v("#")]),t._v(" 速度优化")]),t._v(" "),s("p",[t._v("TypeScript 3.9 提供了多项速度优化。\nTypeScript 在 "),s("code",[t._v("material-ui")]),t._v("  和 "),s("code",[t._v("styled-components")]),t._v("  代码包中拥有非常慢的编辑速度和编译速度。在发现了这点后，TypeScript 团队集中了精力解决性能问题。\nTypeScript 优化了大型联合类型、交叉类型、有条件类型和映射类型。")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/36576",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/microsoft/TypeScript/pull/36576"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/36590",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/microsoft/TypeScript/pull/36590"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/36607",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/microsoft/TypeScript/pull/36607"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/36622",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/microsoft/TypeScript/pull/36622"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/36754",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/microsoft/TypeScript/pull/36754"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/36696",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/microsoft/TypeScript/pull/36696"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("上面列出的每一个 PR 都能够减少 5-10% 的编译时间（对于某些代码库）。\n对于 "),s("code",[t._v("material-ui")]),t._v("  库而言，现在能够节约大约 40% 的编译时间！")]),t._v(" "),s("p",[t._v("我们还调整了在编辑器中的文件重命名功能。\n从 Visual Studio Code 团队处得知，当重命名一个文件时，计算出需要更新的 "),s("code",[t._v("import")]),t._v("  语句要花费 5 到 10 秒的时间。\nTypeScript 3.9 通过"),s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/37055",target:"_blank",rel:"noopener noreferrer"}},[t._v("改变编译器和语言服务缓存文件查询的内部实现"),s("OutboundLink")],1),t._v("解决了这个问题。")]),t._v(" "),s("p",[t._v("尽管仍有优化的空间，我们希望当前的改变能够为每个人带来更流畅的体验。")]),t._v(" "),s("h2",{attrs:{id:"ts-expect-error-注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-expect-error-注释"}},[t._v("#")]),t._v(" "),s("code",[t._v("// @ts-expect-error")]),t._v("  注释")]),t._v(" "),s("p",[t._v("设想一下，我们正在使用 TypeScript 编写一个代码库，它对外开放了一个公共函数 "),s("code",[t._v("doStuff")]),t._v(" 。\n该函数的类型声明了它接受两个 "),s("code",[t._v("string")]),t._v("  类型的参数，因此其它 TypeScript 的用户能够看到类型检查的结果，但该函数还进行了运行时的检查以便 JavaScript 用户能够看到一个有帮助的错误。")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doStuff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("abc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" xyz"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" abc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" xyz "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do some stuff")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果有人错误地使用了该函数，那么 TypeScript 用户能够看到红色的波浪线和错误提示，JavaScript 用户会看到断言错误。\n然后，我们想编写一条单元测试来测试该行为。")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doStuff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toThrow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("不巧的是，如果你使用 TypeScript 来编译单元测试，TypeScript 会提示一个错误！")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doStuff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      ~~~")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误：类型'number'不能够赋值给类型'string'。")]),t._v("\n")])])]),s("p",[t._v("这就是 TypeScript 3.9 添加了 "),s("code",[t._v("// @ts-expect-error")]),t._v("  注释的原因。\n当一行代码带有 "),s("code",[t._v("// @ts-expect-error")]),t._v("  注释时，TypeScript 不会提示上例的错误；\n但如果该行代码没有错误，TypeScript 会提示没有必要使用 "),s("code",[t._v("// @ts-expect-error")]),t._v(" 。")]),t._v(" "),s("p",[t._v("示例，以下的代码是正确的：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @ts-expect-error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("47")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'octopus'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("但是下面的代码：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @ts-expect-error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("会产生错误：")]),t._v(" "),s("div",{staticClass:"language-txt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[t._v("未使用的 '@ts-expect-error' 指令。\n")])])]),s("p",[t._v("非常感谢"),s("a",{attrs:{href:"https://github.com/JoshuaKGoldberg",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Josh Goldberg"),s("OutboundLink")],1),t._v(" 实现了这个功能。\n更多信息请参考"),s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/36014",target:"_blank",rel:"noopener noreferrer"}},[t._v(" the  "),s("code",[t._v("ts-expect-error")]),t._v("  pull request"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"ts-ignore-还是-ts-expect-error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-ignore-还是-ts-expect-error"}},[t._v("#")]),t._v(" "),s("code",[t._v("ts-ignore")]),t._v("  还是  "),s("code",[t._v("ts-expect-error")]),t._v(" ?")]),t._v(" "),s("p",[t._v("某些情况下， "),s("code",[t._v("// @ts-expect-error")]),t._v("  和 "),s("code",[t._v("// @ts-ignore")]),t._v("  是相似的，都能够阻止产生错误消息。\n两者的不同在于，如果下一行代码没有错误，那么 "),s("code",[t._v("// @ts-ignore")]),t._v("  不会做任何事。")]),t._v(" "),s("p",[t._v("你可能会想要抛弃 "),s("code",[t._v("// @ts-ignore")]),t._v("  注释转而去使用 "),s("code",[t._v("// @ts-expect-error")]),t._v(" ，并且想要知道哪一个更适用于以后的代码。\n实际上，这完全取决于你和你的团队，下面列举了一些具体情况。")]),t._v(" "),s("p",[t._v("如果满足以下条件，那么选择 "),s("code",[t._v("ts-expect-error")]),t._v(" ：")]),t._v(" "),s("ul",[s("li",[t._v("你在编写单元测试，并且想让类型系统提示错误")]),t._v(" "),s("li",[t._v("你知道此处有问题，并且很快会回来改正它，只是暂时地忽略该错误")]),t._v(" "),s("li",[t._v("你的团队成员都很积极，大家想要在代码回归正常后及时地删除忽略类型检查注释")])]),t._v(" "),s("p",[t._v("如果满足以下条件，那么选择 "),s("code",[t._v("ts-ignore")]),t._v(" ：")]),t._v(" "),s("ul",[s("li",[t._v("项目规模较大，产生了一些错误但是找不到相应代码的负责人")]),t._v(" "),s("li",[t._v("正处于 TypeScript 版本升级的过程中，某些错误只在特定版本的 TypeScript 中存在，但是在其它版本中并不存在")]),t._v(" "),s("li",[t._v("你没有足够的时间考虑究竟应该使用 "),s("code",[t._v("// @ts-ignore")]),t._v("  还是 "),s("code",[t._v("// @ts-expect-error")])])]),t._v(" "),s("h2",{attrs:{id:"在条件表达式中检查未被调用的函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在条件表达式中检查未被调用的函数"}},[t._v("#")]),t._v(" 在条件表达式中检查未被调用的函数")]),t._v(" "),s("p",[t._v("在 TypeScript 3.7 中，我们引入了"),s("em",[t._v("未进行函数调用的检查")]),t._v("，当你忘记去调用某个函数时会产生错误。")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasImportantPermissions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Oops!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasImportantPermissions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  ~~~~~~~~~~~~~~~~~~~~~~~")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个条件永远返回true，因为函数已经被定义。")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 你是否想要调用该函数？")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteAllTheImportantFiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("然而，这个错误只会在 "),s("code",[t._v("if")]),t._v("  条件语句中才会提示。\n多亏了"),s("a",{attrs:{href:"https://github.com/a-tarasyuk",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Alexander Tarasyuk"),s("OutboundLink")],1),t._v(" 提交的"),s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/36402",target:"_blank",rel:"noopener noreferrer"}},[t._v(" PR"),s("OutboundLink")],1),t._v("，现在这个特性也支持在三元表达式中使用，例如 "),s("code",[t._v("cond ? trueExpr : falseExpr")]),t._v(" 。")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listFilesOfDirectory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dirPath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDirectory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAllFiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("startFileName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("startFileName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("traverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentPath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" isDirectory\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ~~~~~~~~~~~")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该条件永远返回true")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为函数已经被定义。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 你是否想要调用该函数？")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listFilesOfDirectory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("traverse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/issues/36048",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/microsoft/TypeScript/issues/36048"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"编辑器改进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编辑器改进"}},[t._v("#")]),t._v(" 编辑器改进")]),t._v(" "),s("p",[t._v("TypeScript 编译器不但支持在大部分编辑器中编写 TypeScript 代码，还支持着在 Visual Studio 系列的编辑器中编写 JavaScript 代码。\n针对不同的编辑器，在使用 TypeScript/JavaScript 的新功能时可能会有所区别，但是")]),t._v(" "),s("ul",[s("li",[t._v("Visual Studio Code 支持"),s("a",{attrs:{href:"https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-the-workspace-version-of-typescript",target:"_blank",rel:"noopener noreferrer"}},[t._v("选择不同的 TypeScript 版本"),s("OutboundLink")],1),t._v("。或者，安装"),s("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-typescript-next",target:"_blank",rel:"noopener noreferrer"}},[t._v(" JavaScript/TypeScript Nightly Extension"),s("OutboundLink")],1),t._v(" 插件来使用最新的版本。")]),t._v(" "),s("li",[t._v("Visual Studio 2017/2019 提供了 SDK 安装包，以及"),s("a",{attrs:{href:"https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild",target:"_blank",rel:"noopener noreferrer"}},[t._v(" MSBuild 安装包"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("li",[t._v("Sublime Text 3 支持"),s("a",{attrs:{href:"https://github.com/microsoft/TypeScript-Sublime-Plugin#note-using-different-versions-of-typescript",target:"_blank",rel:"noopener noreferrer"}},[t._v("选择不同的 TypeScript 版本"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"在-javascript-中自动导入-commonjs-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-javascript-中自动导入-commonjs-模块"}},[t._v("#")]),t._v(" 在 JavaScript 中自动导入 CommonJS 模块")]),t._v(" "),s("p",[t._v("在使用了 CommonJS 模块的 JavaScript 文件中，我们对自动导入功能进行了一个非常棒的改进。")]),t._v(" "),s("p",[t._v("在旧的版本中，TypeScript 总是假设你想要使用 ECMAScript 模块风格的导入语句，并且无视你的文件类型。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("然而，在编写 JavaScript 文件时，并不总是想要使用 ECMAScript 模块风格。\n非常多的用户仍然在使用 CommonJS 模块，例如 "),s("code",[t._v("require(...)")]),t._v(" 。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("现在，TypeScript 会自动检测你正在使用的导入语句风格，并使用当前的导入语句风格。")]),t._v(" "),s("p",[s("video",{attrs:{src:"https://devblogs.microsoft.com/typescript/wp-content/uploads/sites/11/2020/03/ERkaliGU0AA5anJ1.mp4"}})]),t._v(" "),s("p",[t._v("更新信息请参考"),s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/37027",target:"_blank",rel:"noopener noreferrer"}},[t._v(" PR"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"code-actions-保留换行符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code-actions-保留换行符"}},[t._v("#")]),t._v(" Code Actions 保留换行符")]),t._v(" "),s("p",[t._v("TypeScript 的重构工具和快速修复工具对换行符的处理不是非常好。\n一个基本的示例如下。")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" maxValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*start*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" maxValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// First get the squared value.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" square "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now print the squared value.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("square"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*end*/")]),t._v("\n")])])]),s("p",[t._v("如果我们选中从 "),s("code",[t._v("/*start*/")]),t._v("  到 "),s("code",[t._v("/*end*/")]),t._v(" ，然后进行 “提取到函数” 操作，我们会得到如下的代码。")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" maxValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printSquares")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printSquares")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" maxValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// First get the squared value.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" square "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now print the squared value.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("square"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://devblogs.microsoft.com/typescript/wp-content/uploads/sites/11/2020/03/printSquaresWithoutNewlines-3.9.gif.gif",alt:"在旧版本的TypeScript中，将循环提取到函数时，换行符没有被保留。"}})]),t._v(" "),s("p",[t._v("这不是我们想要的 - 在 "),s("code",[t._v("for")]),t._v("  循环中，每条语句之间都有一个空行，但是重构后它们被移除了！\nTypeScript 3.9 调整后，它会保留我们编写的代码。")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" maxValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printSquares")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printSquares")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" maxValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// First get the squared value.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" square "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now print the squared value.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("square"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://devblogs.microsoft.com/typescript/wp-content/uploads/sites/11/2020/03/printSquaresWithNewlines-3.9.gif.gif",alt:"在TypeScript 3.9中，将循环提取到函数时，会保留一个换行符。"}})]),t._v(" "),s("p",[t._v("更多信息请参考"),s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/36688",target:"_blank",rel:"noopener noreferrer"}},[t._v(" PR"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"快速修复-缺失的返回值表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速修复-缺失的返回值表达式"}},[t._v("#")]),t._v(" 快速修复：缺失的返回值表达式")]),t._v(" "),s("p",[t._v("有时候，我们可能忘记在函数的最后添加返回值语句，尤其是在将简单箭头函数转换成还有花括号的箭头函数时。")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// before")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// oops - not the same!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("感谢开源社区的"),s("a",{attrs:{href:"https://github.com/Kingwl",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Wenlu Wang"),s("OutboundLink")],1),t._v(" 的"),s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/26434",target:"_blank",rel:"noopener noreferrer"}},[t._v(" PR"),s("OutboundLink")],1),t._v("，TypeScript 提供了快速修复功能来添加 "),s("code",[t._v("return")]),t._v("  语句，删除花括号，或者为箭头函数体添加小括号用以区分对象字面量。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://devblogs.microsoft.com/typescript/wp-content/uploads/sites/11/2020/04/missingReturnValue-3-9.gif",alt:"示例"}})]),t._v(" "),s("h3",{attrs:{id:"支持-solution-style-的tsconfig-json文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#支持-solution-style-的tsconfig-json文件"}},[t._v("#")]),t._v(' 支持 "Solution Style" 的 '),s("code",[t._v("tsconfig.json")]),t._v("  文件")]),t._v(" "),s("p",[t._v("编译器需要知道一个文件被哪个配置文件所管理，因此才能够应用适当的配置选项并且计算出当前 “工程” 包含了哪些文件。\n在默认情况下，编辑器使用 TypeScript 语言服务来向上遍历父级目录以查找 "),s("code",[t._v("tsconfig.json")]),t._v("  文件。")]),t._v(" "),s("p",[t._v("有一种特殊情况是 "),s("code",[t._v("tsconfig.json")]),t._v("  文件仅用于引用其它 "),s("code",[t._v("tsconfig.json")]),t._v("  文件。")]),t._v(" "),s("div",{staticClass:"language-json5 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json5"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tsconfig.json")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property unquoted"}},[t._v("files")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property unquoted"}},[t._v("references")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property unquoted"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./tsconfig.shared.json'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property unquoted"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./tsconfig.frontend.json'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property unquoted"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./tsconfig.backend.json'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这个文件除了用来管理其它项目的配置文件之外什么也没做，在某些环境中它被叫作 “solution”。\n这里，任何一个 "),s("code",[t._v("tsconfig.*.json")]),t._v("  文件都不会被 TypeScript 语言服务所选用，但是我们希望语言服务能够分析出当前的 "),s("code",[t._v(".ts")]),t._v("  文件被上述 "),s("code",[t._v("tsconfig.json")]),t._v("  中引用的哪个配置文件所管理。")]),t._v(" "),s("p",[t._v("TypeScript 3.9 为这种类型的配置方式添加了编辑器的支持。\n更多信息请参考"),s("a",{attrs:{href:"https://github.com/microsoft/TypeScript/pull/37239",target:"_blank",rel:"noopener noreferrer"}},[t._v(" PR"),s("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);s.default=e.exports}}]);
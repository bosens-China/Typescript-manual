(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{333:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"typescript-2-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript-2-6"}},[t._v("#")]),t._v(" TypeScript 2.6")]),t._v(" "),a("h2",{attrs:{id:"严格函数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格函数类型"}},[t._v("#")]),t._v(" 严格函数类型")]),t._v(" "),a("p",[t._v("TypeScript 2.6引入了新的类型检查选项，"),a("code",[t._v("--strictFunctionTypes")]),t._v("。"),a("code",[t._v("--strictFunctionTypes")]),t._v("选项是"),a("code",[t._v("--strict")]),t._v("系列选项之一，也就是说 "),a("code",[t._v("--strict")]),t._v("模式下它默认是启用的。你可以通过在命令行或tsconfig.json中设置"),a("code",[t._v("--strictFunctionTypes false")]),t._v("来单独禁用它。")]),t._v(" "),a("p",[a("code",[t._v("--strictFunctionTypes")]),t._v("启用时，函数类型参数的检查是*抗变（contravariantly）"),a("em",[t._v("而非")]),t._v("双变（bivariantly）*的。关于变体 (variance) 对于函数类型意义的相关背景，请查看"),a("a",{attrs:{href:"https://www.stephanboyer.com/post/132/what-are-covariance-and-contravariance",target:"_blank",rel:"noopener noreferrer"}},[t._v("协变（covariance）和抗变（contravariance）是什么？"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("这一更严格的检查应用于除方法或构造函数声明以外的所有函数类型。方法被专门排除在外是为了确保带泛型的类和接口（如 Array"),a("code",[t._v("<T>")]),t._v("）总体上仍然保持协变。")]),t._v(" "),a("p",[t._v("考虑下面这个 Animal 是 Dog 和 Cat 的父类型的例子：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nf1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用 --strictFunctionTypes 时错误")]),t._v("\nf2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确")]),t._v("\nf2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误")]),t._v("\n")])])]),a("p",[t._v("第一个赋值语句在默认的类型检查模式中是允许的，但是在严格函数类型模式下会被标记错误。\n通俗地讲，默认模式允许这么赋值，因为它"),a("em",[t._v("可能是")]),t._v("合理的，而严格函数类型模式将它标记为错误，因为它不能"),a("em",[t._v("被证明")]),t._v("合理。\n任何一种模式中，第三个赋值都是错误的，因为它"),a("em",[t._v("永远不")]),t._v("合理。")]),t._v(" "),a("p",[t._v("用另一种方式来描述这个例子则是，默认类型检查模式中"),a("code",[t._v("T")]),t._v("在类型"),a("code",[t._v("(x: T) => void")]),t._v("是"),a("em",[t._v("双变的")]),t._v("（也即协变"),a("em",[t._v("或")]),t._v("抗变），但在严格函数类型模式中"),a("code",[t._v("T")]),t._v("是"),a("em",[t._v("抗变")]),t._v("的。")]),t._v(" "),a("h5",{attrs:{id:"例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparer")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("compare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" animalComparer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Comparer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Animal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dogComparer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Comparer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Dog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nanimalComparer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dogComparer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误")]),t._v("\ndogComparer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" animalComparer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确")]),t._v("\n")])])]),a("p",[t._v("现在第一个赋值是错误的。更明确地说，"),a("code",[t._v("Comparer<T>")]),t._v("中的"),a("code",[t._v("T")]),t._v("因为仅在函数类型参数的位置被使用，是抗变的。")]),t._v(" "),a("p",[t._v("另外，注意尽管有的语言（比如C#和Scala）要求变体标注（variance annotations）（"),a("code",[t._v("out")]),t._v("/"),a("code",[t._v("in")]),t._v(" 或 "),a("code",[t._v("+")]),t._v("/"),a("code",[t._v("-")]),t._v("），而由于TypeScript的结构化类型系统，它的变体是由泛型中的类型参数的实际使用自然得出的。")]),t._v(" "),a("h5",{attrs:{id:"注意："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意："}},[t._v("#")]),t._v(" 注意：")]),t._v(" "),a("p",[t._v("启用"),a("code",[t._v("--strictFunctionTypes")]),t._v("时，如果"),a("code",[t._v("compare")]),t._v("被声明为方法，则第一个赋值依然是被允许的。\n更明确的说，"),a("code",[t._v("Comparer<T>")]),t._v("中的"),a("code",[t._v("T")]),t._v("因为仅在方法参数的位置被使用所以是双变的。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comparer")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" animalComparer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Comparer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Animal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dogComparer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Comparer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Dog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nanimalComparer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dogComparer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确，因为双变")]),t._v("\ndogComparer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" animalComparer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确")]),t._v("\n")])])]),a("p",[t._v("TypeScript 2.6 还改进了与抗变位置相关的类型推导：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" combine"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("funcs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("）")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" funcs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("animalFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dogFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" combined "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("combine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animalFunc，dogFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (x: Dog) => void")]),t._v("\n")])])]),a("p",[t._v("这上面所有"),a("code",[t._v("T")]),t._v("的推断都来自抗变的位置，由此我们得出"),a("code",[t._v("T")]),t._v("的"),a("em",[t._v("最普遍子类型")]),t._v("。\n这与从协变位置推导出的结果恰恰相反，从协变位置我们得出的是"),a("em",[t._v("最普遍超类型")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"缓存模块中的标签模板对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存模块中的标签模板对象"}},[t._v("#")]),t._v(" 缓存模块中的标签模板对象")]),t._v(" "),a("p",[t._v("TypeScript 2.6修复了标签字符串模板的输出，以更好地遵循ECMAScript标准。\n根据"),a("a",{attrs:{href:"https://tc39.github.io/ecma262/#sec-gettemplateobject",target:"_blank",rel:"noopener noreferrer"}},[t._v("ECMAScript 标准"),a("OutboundLink")],1),t._v("，每一次获取模板标签的值时，应该将"),a("em",[t._v("同一个")]),t._v("模板字符串数组对象 (同一个 "),a("code",[t._v("TemplateStringArray")]),t._v(") 作为第一个参数传递。\n在 TypeScript 2.6 之前，每一次生成的都是全新的模板对象。\n虽然字符串的内容是一样的，这样的输出会影响通过识别字符串来实现缓存失效的库，比如 "),a("a",{attrs:{href:"https://github.com/PolymerLabs/lit-html/issues/58",target:"_blank",rel:"noopener noreferrer"}},[t._v("lit-html"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h5",{attrs:{id:"例子-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子-2"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TemplateStringsArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("templateObjectFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("hello world")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("templateObjectFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("templateObjectFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TS 2.6 为 true")]),t._v("\n")])])]),a("p",[t._v("编译后的代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" __makeTemplateObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__makeTemplateObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cooked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" raw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defineProperty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cooked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"raw"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" raw "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" cooked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" raw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cooked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("templateObjectFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__makeTemplateObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("templateObjectFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("templateObjectFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("注意：这一改变引入了新的工具函数，"),a("code",[t._v("__makeTemplateObject")]),t._v(";\n如果你在搭配使用"),a("code",[t._v("--importHelpers")]),t._v("和"),a("a",{attrs:{href:"https://github.com/Microsoft/tslib",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("tslib")]),a("OutboundLink")],1),t._v("，需要更新到 1.8 或更高版本。")])]),t._v(" "),a("h2",{attrs:{id:"本地化的命令行诊断消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地化的命令行诊断消息"}},[t._v("#")]),t._v(" 本地化的命令行诊断消息")]),t._v(" "),a("p",[t._v("TypeScript 2.6 npm包加入了13种语言的诊断消息本地化版本。\n命令行中本地化消息会在使用"),a("code",[t._v("--locale")]),t._v("选项时显示。")]),t._v(" "),a("h5",{attrs:{id:"例子-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子-3"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),a("p",[t._v("俄语显示的错误消息：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("c:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ts"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("tsc --v\nVersion "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.6")]),t._v(".1\n\nc:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ts"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("tsc --locale ru --pretty c:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("a.ts\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/test/a.ts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1,5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": error TS2322: Тип "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("string"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" не может быть назначен для типа "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" var x: number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      ~\n")])])]),a("p",[t._v("中文显示的帮助信息：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("PS C:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ts"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" tsc --v\nVersion "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.6")]),t._v(".1\n\nPS C:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ts"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" tsc --locale zh-cn\n版本 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.6")]),t._v(".1\n语法：tsc "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("文件 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n示例：tsc hello.ts\n    tsc --outFile file.js file.ts\n    tsc @args.txt\n\n选项：\n -h, --help                    打印此消息。\n --all                         显示所有编译器选项。\n -v, --version                 打印编译器的版本。\n --init                        初始化 TypeScript 项目并创建 tsconfig.json 文件。\n -p 文件或目录, --project 文件或目录     编译给定了其配置文件路径或带 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsconfig.json"')]),t._v(" 的文件夹路径的项目。\n --pretty                      使用颜色和上下文风格化错误和消息"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("实验"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n -w, --watch                   监视输入文件。\n -t 版本, --target 版本            指定 ECMAScript 目标版本："),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ES3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ES5"')]),t._v("、"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ES2015"')]),t._v("、"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ES2016"')]),t._v("、"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ES2017"')]),t._v(" 或 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ESNEXT"')]),t._v("。\n -m 种类, --module 种类            指定模块代码生成："),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),t._v("、"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commonjs"')]),t._v("、"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amd"')]),t._v("、"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"system"')]),t._v("、"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"umd"')]),t._v("、"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"es2015"')]),t._v("或 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ESNext"')]),t._v("。\n --lib                         指定要在编译中包括的库文件:\n                                 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es5'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es6'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2015'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es7'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2016'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2017'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'esnext'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dom'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dom.iterable'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webworker'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'scripthost'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2015.core'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2015.collection'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2015.generator'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2015.iterable'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2015.promise'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2015.proxy'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2015.reflect'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2015.symbol'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2015.symbol.wellknown'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2016.array.include'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2017.object'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2017.sharedmemory'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2017.string'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es2017.intl'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'esnext.asynciterable'")]),t._v("\n --allowJs                     允许编译 JavaScript 文件。\n --jsx 种类                      指定 JSX 代码生成："),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"preserve"')]),t._v("、"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react-native"')]),t._v(" 或 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),t._v("。 -d, --declaration             生成相应的 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".d.ts"')]),t._v(" 文件。\n --sourceMap                   生成相应的 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".map"')]),t._v(" 文件。\n --outFile 文件                  连接输出并将其发出到单个文件。\n --outDir 目录                   将输出结构重定向到目录。\n --removeComments              请勿将注释发出到输出。\n --noEmit                      请勿发出输出。\n --strict                      启用所有严格类型检查选项。\n --noImplicitAny               对具有隐式 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"any"')]),t._v(" 类型的表达式和声明引发错误。\n --strictNullChecks            启用严格的 NULL 检查。\n --strictFunctionTypes         对函数类型启用严格检查。\n --noImplicitThis              在带隐式"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"any"')]),t._v(" 类型的 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" 表达式上引发错误。\n --alwaysStrict                以严格模式进行分析，并为每个源文件发出 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),t._v(" 指令。\n --noUnusedLocals              报告未使用的局部变量上的错误。\n --noUnusedParameters          报告未使用的参数上的错误。\n --noImplicitReturns           在函数中的所有代码路径并非都返回值时报告错误。\n --noFallthroughCasesInSwitch  报告 switch 语句中遇到 fallthrough 情况的错误。\n --types                       要包含在编译中类型声明文件。\n @"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                         从文件插入命令行选项和文件。\n")])])]),a("h2",{attrs:{id:"通过-ts-ignore-注释隐藏-ts-文件中的错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-ts-ignore-注释隐藏-ts-文件中的错误"}},[t._v("#")]),t._v(" 通过 '// @ts-ignore' 注释隐藏 .ts 文件中的错误")]),t._v(" "),a("p",[t._v("TypeScript 2.6支持在.ts文件中通过在报错一行上方使用"),a("code",[t._v("// @ts-ignore")]),t._v("来忽略错误。")]),t._v(" "),a("h5",{attrs:{id:"例子-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子-4"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @ts-ignore：无法被执行的代码的错误")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("// @ts-ignore")]),t._v("注释会忽略下一行中产生的所有错误。\n建议实践中在"),a("code",[t._v("@ts-ignore")]),t._v("之后添加相关提示，解释忽略了什么错误。")]),t._v(" "),a("p",[t._v("请注意，这个注释仅会隐藏报错，并且我们建议你"),a("em",[t._v("极少")]),t._v("使用这一注释。")]),t._v(" "),a("h2",{attrs:{id:"更快的-tsc-watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更快的-tsc-watch"}},[t._v("#")]),t._v(" 更快的 "),a("code",[t._v("tsc --watch")])]),t._v(" "),a("p",[t._v("TypeScript 2.6 带来了更快的"),a("code",[t._v("--watch")]),t._v("实现。\n新版本优化了使用ES模块的代码的生成和检查。\n在一个模块文件中检测到的改变"),a("em",[t._v("只")]),t._v("会使改变的模块，以及依赖它的文件被重新生成，而不再是整个项目。\n有大量文件的项目应该从这一改变中获益最多。")]),t._v(" "),a("p",[t._v("这一新的实现也为tsserver中的监听带来了性能提升。\n监听逻辑被完全重写以更快响应改变事件。")]),t._v(" "),a("h2",{attrs:{id:"只写的引用现在会被标记未使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只写的引用现在会被标记未使用"}},[t._v("#")]),t._v(" 只写的引用现在会被标记未使用")]),t._v(" "),a("p",[t._v("TypeScript 2.6加入了修正的"),a("code",[t._v("--noUnusedLocals")]),t._v("和"),a("code",[t._v("--noUnusedParameters")]),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("编译选项"),a("OutboundLink")],1),t._v("实现。\n只被写但从没有被读的声明现在会被标记未使用。")]),t._v(" "),a("h5",{attrs:{id:"例子-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子-5"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),a("p",[t._v("下面"),a("code",[t._v("n")]),t._v("和"),a("code",[t._v("m")]),t._v("都会被标记为未使用，因为它们的值从未被"),a("em",[t._v("读取")]),t._v("。之前 TypeScript 只会检查它们的值是否被"),a("em",[t._v("引用")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("另外仅被自己内部调用的函数也会被认为是未使用的。")]),t._v(" "),a("h5",{attrs:{id:"例子-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子-6"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误：'f' 被声明，但它的值从未被使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
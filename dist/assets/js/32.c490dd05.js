(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{276:function(t,s,e){"use strict";e.r(s);var a=e(0),i=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"typescript-3-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-3-5"}},[t._v("#")]),t._v(" TypeScript 3.5")]),t._v(" "),e("h2",{attrs:{id:"lib-d-ts-包含了-omit-辅助类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lib-d-ts-包含了-omit-辅助类型"}},[t._v("#")]),t._v(" "),e("code",[t._v("lib.d.ts")]),t._v("  包含了  "),e("code",[t._v("Omit")]),t._v("  辅助类型")]),t._v(" "),e("p",[t._v("TypeScript 3.5 包含一个  "),e("code",[t._v("Omit")]),t._v("  辅助类型。")]),t._v(" "),e("p",[t._v("因此，你项目中任何全局定义的  "),e("code",[t._v("Omit")]),t._v("  将产生以下错误信息:")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[t._v("Duplicate identifier "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Omit'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),e("p",[t._v("两个变通的方法可以在这里使用：")]),t._v(" "),e("ol",[e("li",[t._v("删除重复定义的并使用  "),e("code",[t._v("lib.d.ts")]),t._v("  提供的。")]),t._v(" "),e("li",[t._v("从模块中导出定义避免全局冲突。现有的用法可以使用  "),e("code",[t._v("import")]),t._v("  直接引用项目的旧  "),e("code",[t._v("Omit")]),t._v("  类型。")])])])}),[],!1,null,null,null);s.default=i.exports}}]);